<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="selectMainList">
		SELECT MV_NO
			, MV_NAME
			, MV_OPENDATE
			, MV_STORY
			, FPAGE_EXPOSED 
			, MPAGE_EXPOSED
			, MV_POSTER
			, MV_PREVIEW
			, MV_STATUS
		FROM MOVIE
		WHERE MV_STATUS = 'Y'
	</entry>
	
	<!-- 관리자 영화 조회 페이징처리 [수민]-->
		<entry key="selectMovieListCount">
			SELECT COUNT(*) COUNT
			  FROM MOVIE
			 WHERE MV_STATUS = 'Y'
		</entry>
		
				
	<!-- 관리자 영화 조회  [수민] -->
		<entry key="selectMovieList">
			SELECT *
				FROM(
					SELECT ROWNUM RNUM, A.*
					  FROM (
					  	SELECT
						    M.MV_NO,
						    M.MV_NAME,
						    M.MV_DATE,
						    M.VIEW_RATING,
						    M.MV_OPENDATE,
						    LISTAGG(C.CATEGORY_NAME, ', ') WITHIN GROUP (ORDER BY C.CATEGORY_NAME) AS CATEGORY_NAMES
						FROM 
						    MOVIE M
						LEFT JOIN 
						    MOVIE_CATEGORY MC ON MC.MV_NO = M.MV_NO
						LEFT JOIN 
						    CATEGORY C ON MC.CATEGORY_NO = C.CATEGORY_NO
						WHERE 
						    M.MV_STATUS = 'Y'
						GROUP BY 
						    M.MV_NO, M.MV_NAME, M.MV_DATE, M.VIEW_RATING, M.MV_OPENDATE
						ORDER BY 
						    M.MV_NO DESC
					  		) A
					)
				WHERE RNUM BETWEEN ? AND ?
				  
		</entry>

		<!-- 관리자 영화조회 검색기능 [수민] -->
		<entry key="searchMovie">
			SELECT  
				M.MV_NO,
			    M.MV_NAME,
			    M.MV_DATE,
			    M.VIEW_RATING,
			    M.MV_OPENDATE,
			    LISTAGG(C.CATEGORY_NAME, ', ') WITHIN GROUP (ORDER BY C.CATEGORY_NAME) AS CATEGORY_NAMES
			FROM MOVIE M
			LEFT JOIN 
			    MOVIE_CATEGORY MC ON MC.MV_NO = M.MV_NO
			LEFT JOIN 
			    CATEGORY C ON MC.CATEGORY_NO = C.CATEGORY_NO
			WHERE MV_STATUS = 'Y'
			  AND MV_NAME LIKE '%' || ? || '%'
			GROUP BY 
			    M.MV_NO, M.MV_NAME, M.MV_DATE, M.VIEW_RATING, M.MV_OPENDATE
			ORDER BY 
			    M.MV_NO DESC
		</entry>
		
		<!-- 관리자 영화 삭제 [수민] -->
		<entry key="deleteMovie">
			UPDATE
				   MOVIE
			   SET MV_STATUS = 'N'
			 WHERE MV_NO = ?
			 
		</entry>
		
		<!-- 관리자 영화 삭제 시 같이 등록한 이미지 status값 변경 [수민] -->
		<entry key="deleteMovieAttachment">
			UPDATE
				  ATTACHMENT
			  SET FILE_STATUS = 'N'
			WHERE REF_TYPE IN (1 ,2)
			  AND REF_NO = ?
		</entry>
		
		<!-- 관리자 영화 상세 조회 [수민] -->
		<!-- 영화관련 쿼리 / 영화추가 파일(movie-mapper)은에서 가져옴-->
		<entry key="MovieListDetail">
			SELECT
			      M.MV_NO
			    , M.MV_NAME
			    , M.MV_OPENDATE
			    , M.MV_NATION
			    , M.MV_RTIME
			    , M.MV_STORY
			    , M.FPAGE_EXPOSED
			    , M.VIEW_RATING
			    , M.CURRENT_SCREENING
			    , M.MV_POSTER
			    , M.MV_PREVIEW
			    , LISTAGG(C.CATEGORY_NAME, ', ') WITHIN GROUP (ORDER BY C.CATEGORY_NAME) AS CATEGORY_NAMES
			    , NM.NM_USER_REQUEST
			    , NM.MEM_NO
			    , NM.ADMIN_NO
			FROM MOVIE M
			LEFT JOIN 
			    MOVIE_CATEGORY MC ON MC.MV_NO = M.MV_NO
			LEFT JOIN
			    CATEGORY C ON MC.CATEGORY_NO = C.CATEGORY_NO
			LEFT JOIN 
			    NO_MOVIE_ENROLL NM ON NM.NM_TITLE = M.MV_NAME
			WHERE M.MV_NO = ?
			GROUP BY 
			    M.MV_NO, M.MV_NAME, M.MV_OPENDATE, M.MV_NATION, M.MV_RTIME, M.MV_STORY, M.FPAGE_EXPOSED, 
			    M.VIEW_RATING, M.CURRENT_SCREENING, M.MV_POSTER, M.MV_PREVIEW, NM.NM_USER_REQUEST, NM.MEM_NO, NM.ADMIN_NO
			ORDER BY 
			    M.MV_NO DESC		
		</entry>
		
		<!-- 관리자 영화 상세조회 시 인물관련 쿼리 [수민] -->
		<entry key="moiveListDetailPerson">
			SELECT P_NO, P_NAME, CASTING, P_JOB, P_BD, P_NATION, P_FILE, MOVIE_NO
	        FROM PERSON
	        JOIN CASTING
	        ON P_NO = PERSON_NO
	        WHERE MOVIE_NO = ?
		</entry>
		
		
		<!-- 관리자 영화 카테고리 관리탭 조회 [수민] -->
		<entry key="movieCategoryList">
			SELECT
				  CATEGORY_NO
				, CATEGORY_NAME
				, CATEGORY_STATUS
			FROM CATEGORY
		</entry>
		
		
		
		<!-- 관리자 영화 카테고리 삭제 [수민] -->
		<entry key="deleteCategory">
			UPDATE
				  CATEGORY
			  SET CATEGORY_STATUS = 'N'
			WHERE  CATEGORY_NAME = ?
		</entry>
		
		<!-- 관리자 카테고리 등록 [수민]-->
		<entry key="addCategory">
			INSERT
				INTO CATEGORY
				(
					CATEGORY_NO
				  , CATEGORY_NAME
				  , CATEGORY_DATE
				  , CATEGORY_STATUS
				)
				VALUES
				(
					SEQ_CATEGORY_NO.NEXTVAL
				  , ?
				  , DEFAULT
				  , DEFAULT
				)
		</entry>
		
		<!-- 관리자 카테고리 수정 [수민] -->
		<entry key="updateCategory">
			UPDATE
				    CATEGORY
				SET CATEGORY_NAME = ?
			  WHERE CATEGORY_NO = ?
		</entry>
		
		<!-- 관리자 인물 조회 페이징처리 [수민]-->
		<entry key="selectCastingListCount">
			SELECT COUNT(*) COUNT
			FROM PERSON
		</entry>
		
		<!-- 검색한 인물 조회 페이징처리 -->
		<entry key="searchCastingListCount">
			SELECT COUNT(*) COUNT
			FROM PERSON
			WHERE P_NAME LIKE '%' || ? || '%'
	        AND P_STATUS = 'Y'
		</entry>
		
		<!-- 관리자 인물 조회 [수민] -->
		<entry key="selectPersonList">
			SELECT *
				FROM(
					SELECT ROWNUM RNUM, A.*
					FROM(
						SELECT
							  P_NO
							, P_NAME
							, P_JOB
							, P_BD
							, P_NATION
							, P_FILE
						FROM PERSON
						WHERE P_STATUS = 'Y'
						)A
					)
			WHERE RNUM BETWEEN ? AND ?
		</entry>
		
		<!-- 관리자 인물조회_검색기능 [수민] -->
		<entry key="searchCasting">
			SELECT 
			          P_NO
			        , P_NAME
			        , P_JOB
			        , P_BD
			        , P_NATION
			        , P_FILE
			
			FROM (
			    SELECT
			              P_NO
			            , P_NAME
			            , P_JOB
			            , P_BD
			            , P_NATION
			            , P_FILE
			            , ROWNUM AS "RNUM"
			        FROM PERSON
			        WHERE P_NAME LIKE '%' || ? || '%'
			        AND P_STATUS = 'Y'
			)
			WHERE RNUM BETWEEN ? AND ?
		</entry>
		
		<!-- 관리자 인물관리_등록 [수민]-->
		<entry key="insertPerson">
			INSERT
				INTO PERSON
				(
					P_NO
				  , P_NAME
				  , P_JOB
				  , P_BD
				  , P_NATION
				  , P_FILE
				)
				VALUES
				(
					SEQ_PERSON_NO.NEXTVAL
				  , ?
				  , ?
				  , ?
				  , ?
				  , ?
				)
		</entry>
		
		<!-- 관리자 인물관리_등록_파일등록 [수민] -->
		<entry key="insertPersonAttachment">
			INSERT
				INTO ATTACHMENT
				(
					  FILE_NO
					, REF_NO
					, REF_TYPE
					, ORIGIN_NAME
					, CHANGE_NAME 
					, FILE_PATH	
					, FILE_TYPE			
				)
				VALUES
				(
					  SEQ_ATTACHMENT_NO.NEXTVAL
					, SEQ_PERSON_NO.CURRVAL
					, 8
					, ?
					, ?
					, ?
					, 1
				)
				
		</entry>
		
		<!-- 관리자 인물조회_배우 필터 [수민] -->
		<entry key='selectActorFilter'>
			SELECT
				  P_NO
				, P_NAME
				, P_JOB
				, P_BD
				, P_NATION
				, P_FILE
			FROM PERSON
			WHERE P_JOB LIKE '%배우%'
		</entry>
		
		<!-- 관리자 인물조회_감독 필터 [수민] -->
		<entry key='selectDirectorFilter'>
			SELECT
				  P_NO
				, P_NAME
				, P_JOB
				, P_BD
				, P_NATION
				, P_FILE
			FROM PERSON
			WHERE P_JOB LIKE '%감독%'
		</entry>
		
		<!-- 관리자 인물 삭제 [수민] -->
		<entry key="deletePerson">
			UPDATE
				   PERSON
			   SET P_STATUS = 'N'
			 WHERE P_NO = ?
			 
		</entry>
		
		<!-- 관리자 인물 삭제 시 같이 등록한 이미지 status값 변경 [수민] -->
		<entry key="deletePersonAttachment">
			UPDATE
				  ATTACHMENT
			  SET FILE_STATUS = 'N'
			WHERE REF_TYPE = 8
			  AND REF_NO = ?
		</entry>
		
		<!-- 관리자 인물 수정버튼 시 보여지는 목록 [수민] -->
		<entry key="updateCastingForm">
			SELECT
				  P_NO
				, P_NAME
				, P_JOB
				, P_BD
				, P_NATION
				, P_FILE
			FROM PERSON
			WHERE P_NO = ?
		</entry>
		
		<!-- 관리자 인물 수정 [수민] -->
		<entry key="updatePerson">
			UPDATE
				PERSON
			  SET P_NAME = ?
				, P_JOB = ?
				, P_BD = ?
				, P_NATION = ?
				, P_FILE =?
			WHERE P_NO = ?
				
		</entry>
		
		<!-- 관리자 인물 수정 시 파일이 이미 업로드 되어있을 경우 [수민] -->
		<entry key="updatepAttachment">
			UPDATE
				  ATTACHMENT
			  SET ORIGIN_NAME = ?
			    , CHANGE_NAME = ?
			    , FILE_PATH = ?
			WHERE REF_TYPE = 8
			  AND FILE_NO = ?
		
		</entry>
		
		<!-- 관리자 인물 수정 시 파일이 없을 경우 [수민] -->
		<entry key="insertpNewAttachment">
			INSERT
				INTO ATTACHMENT
				(
				   FILE_NO
				 , REF_TYPE 
				 , REF_NO
				 , ORIGIN_NAME
				 , CHANGE_NAME
				 , FILE_PATH
				 , FILE_TYPE
				)
				VALUES
				(
				   SEQ_ATTACHMENT_NO.NEXTVAL
				 , 8
				 , ?
				 , ?
				 , ?
				 , ?
				 , 1
				)
		</entry>

		<!-- 관리자 영화 신청 [수민] -->
		<!-- 	영화신청_영화 -->
		<entry key="insertMovie">
			INSERT
				INTO MOVIE
				(
					  MV_NO
					, MV_NAME
					, MV_OPENDATE
					, MV_NATION
					, MV_RTIME
					, MV_STORY
					, VIEW_RATING
					, CURRENT_SCREENING
					, MV_POSTER
					, MV_PREVIEW
				)
				VALUES
				(
					  SEQ_MOVIE_NO.NEXTVAL
					, ?
					, ?
					, ?
					, ?
					, ?
					, ?
					, ?
					, ?
					, ?					
				)
		</entry>
		
		<!-- 영화신청_인물 -->
		<entry key="insertMoviePerson">
			INSERT
				INTO CASTING
				(
					  CASTING_NO
					, CASTING
					, MOVIE_NO
					, PERSON_NO
				)
				VALUES
				(
					  SEQ_CASTING_NO.NEXTVAL
					, ? <!-- 배역 -->
					, SEQ_MOVIE_NO.CURRVAL
					, ? <!-- 인물번호 -->
				)
		</entry>
		
		<!-- 영화신청_카테고리 -->
		<entry key="insertMovieCategory">
			INSERT
				INTO MOVIE_CATEGORY
				(
					  MV_CATEGORY_NO
					, MV_NO
					, CATEGORY_NO
				)
				VALUES
				(
					  SEQ_MOVIE_CATEGORY_NO.NEXTVAL
					, SEQ_MOVIE_NO.CURRVAL
					, ? <!-- 장르번호 -->
				)
		</entry>
		
		<!-- 영화신청_첨부파일 -->
		<entry key="insertMovieAttachment">
			INSERT
				INTO ATTACHMENT
				(
					FILE_NO <!-- 첨부파일 번호 -->
				  , REF_NO <!-- 영화번호(영화번호)  -->
				  , REF_TYPE <!-- 첨부파일 타입 -->
				  , FILE_TYPE <!-- 사진1 | 영상2 -->
				  , FILE_LEVEL
				  , ORIGIN_NAME <!-- 원본명 -->
				  , CHANGE_NAME <!-- 수정명 -->
				  , FILE_PATH <!-- 저장경로 -->
				)
				VALUES
				(
					SEQ_ATTACHMENT_NO.NEXTVAL <!-- 첨부파일 번호 -->
				  , SEQ_MOVIE_NO.CURRVAL <!-- 영화번호(영화 번호)  -->
				  , ? <!-- 첨부파일타입 -->
				  , ? <!-- 사진1 | 영상2 -->
				  , ? <!-- 파일레벨 -->
				  , ? <!-- 원본명 -->
				  , ? <!-- 수정명 -->
				  , ? <!-- 저장경로 -->
				)
		</entry>
		
		<!-- 영화수정 [수민] -->
		<!--  영화수정_영화 -->
		<entry key="updateMovie">
			UPDATE
				MOVIE				
			 SET  MV_NAME = ?
				, MV_OPENDATE = ?
				, MV_NATION = ?
				, MV_RTIME = ?
				, MV_STORY = ?
				, VIEW_RATING = ?
				, CURRENT_SCREENING = ?
				, MV_POSTER = ?
				, MV_PREVIEW = ?
			WHERE MV_NO = ?
				
		</entry>
		
		<!-- 영화수정_인물_삭제 -->
		<entry key="updateMoivePersonDelete">
		DELETE
		  FROM CASTING
		 WHERE MOVIE_NO = ?
		</entry>
		
		<!-- 영화수정_인물_등록 -->
		<entry key="updateMoivePersonInsert">
		INSERT
		  INTO CASTING
		  (
		  	CASTING_NO <!-- 출연정보번호 -->
		  , PERSON_NO <!-- 인물번호 -->
		  , MOVIE_NO <!-- 영화번호 -->
		  , CASTING <!-- 배역 -->
		  )
		  VALUES
		  (
		  	SEQ_CASTING_NO.NEXTVAL <!-- 없는 영화 인물 번호 -->
		  , ? <!-- 인물번호 -->
		  , ? <!-- 영화번호 -->
		  , ? <!-- 배역 -->
		  )
		</entry>
		
		<!-- 영화수정_카테고리_삭제 -->
		<entry key="updateMovieCategoryDelete">
			DELETE
		  		FROM MOVIE_CATEGORY
		 	WHERE MV_NO = ?
		</entry>
		
		<!-- 영화수정_카테고리_등록 -->
		<entry key="updateMovieCategoryInsert">
			INSERT
			  INTO MOVIE_CATEGORY
			  (
			  	MV_CATEGORY_NO <!-- 영화 장르번호 -->
			  , CATEGORY_NO <!-- 장르번호 -->
			  , MV_NO <!-- 영화번호 -->
			  )
			  VALUES
			  (
			  	SEQ_MOVIE_CATEGORY_NO.NEXTVAL <!-- 영화 장르번호 -->
			  , ? <!-- 장르번호 -->
			  , ? <!-- 영화번호 -->
			  )
		</entry>
		
		<!-- 영화수정_첨부파일_수정(파일추가_insert) -->
		<entry key="updateMovieAttachment">
			INSERT
				INTO ATTACHMENT
				(
					FILE_NO <!-- 첨부파일 번호 -->
				  , REF_TYPE <!-- 첨부파일 타입 -->
				  , FILE_TYPE <!-- 사진1 | 영상2 -->
				  , FILE_LEVEL
				  , ORIGIN_NAME <!-- 원본명 -->
				  , CHANGE_NAME <!-- 수정명 -->
				  , FILE_PATH <!-- 저장경로 -->
				  , REF_NO <!-- 영화번호(영화번호)  -->
				)
				VALUES
				(
					SEQ_ATTACHMENT_NO.NEXTVAL <!-- 첨부파일 번호 -->				  
				  , ? <!-- 첨부파일타입 -->
				  , ? <!-- 사진1 | 영상2 -->
				  , ? <!-- 파일레벨 -->
				  , ? <!-- 원본명 -->
				  , ? <!-- 수정명 -->
				  , ? <!-- 저장경로 -->
				  , ? <!-- 영화번호(영화 번호)  -->
				)
				
		</entry>
</properties>