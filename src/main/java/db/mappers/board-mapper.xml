<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<!-- 커뮤니티 메인페이지 영화카테고리의 인기글들에 띄울 4개의 값들을 담기 위한 sql문(영화인기게시글) BY 호용-->
	<entry key="selectMainPublicList">
	    SELECT B.*
	      FROM (
	            SELECT
	                   B_NO
	                 , B_CATEGORY
	                 , B_TITLE
	                 , B_READ_COUNT
	                 , B_RECOMMEND_COUNT
	                 , NICKNAME <!-- MEMBER 테이블과 조인 -->
	                 , TO_CHAR(B_REGIST_DATE, 'YY/MM/DD HH:MI:SS') B_REGIST_DATE
	                 , FILE_PATH || CHANGE_NAME TITLEIMG_URL<!-- ATTACHMENT 테이블과 조인  -->
	                 , (SELECT COUNT(*) FROM REPLY WHERE B_NO = BOARD_NO) REPLY_COUNT <!-- 댓글갯수 -->
	              FROM BOARD B
	              JOIN MEMBER M ON (B.MEM_NO = M.MEM_NO)
	              LEFT JOIN ATTACHMENT A ON (REF_TYPE = '3' and A.REF_NO = B.B_NO)
	             WHERE B_D_STATUS = 'N'
	               AND B_CATEGORY = '1'
	               AND B_RECOMMEND_COUNT > 3
	             ORDER
	                BY B_NO DESC
	            ) B
	    WHERE ROWNUM BETWEEN 1 AND 4
	</entry>
	
	<!-- 커뮤니티 메인페이지 영화카테고리의 일반글에 띄울 4개의 값들을 담기 위한 sql문(영화게시글) BY 호용-->
	<entry key="selectMainList">
		    SELECT B.*
		      FROM (
		            SELECT
		                   B_NO
		                 , B_CATEGORY
		                 , B_TITLE
		                 , B_READ_COUNT
		                 , B_RECOMMEND_COUNT
		                 , NICKNAME <!-- MEMBER 테이블과 조인 -->
		                 , TO_CHAR(B_REGIST_DATE, 'YY/MM/DD HH:MI:SS') B_REGIST_DATE
		                 , FILE_PATH || CHANGE_NAME TITLEIMG_URL <!-- ATTACHMENT 테이블과 조인  -->
		                 , (SELECT COUNT(*) FROM REPLY WHERE B_NO = BOARD_NO) REPLY_COUNT
		              FROM BOARD B
		              JOIN MEMBER M ON (B.MEM_NO = M.MEM_NO)
		              LEFT JOIN ATTACHMENT A ON (REF_TYPE = '3' and A.REF_NO = B.B_NO)
		             WHERE B_D_STATUS = 'N'
		               AND B_CATEGORY = '1'
		             ORDER
		                BY B_NO DESC
		            ) B
		    WHERE ROWNUM BETWEEN 1 AND 4
	</entry>
	
	<!-- 커뮤니티 메인페이지 잡담카테고리의 일반글에 띄울 4개의 값들을 담기 위한 sql문(영화게시글) BY 호용-->
	<entry key="selectMainChatList">
		    SELECT B.*
		      FROM (
		            SELECT
		                   B_NO
		                 , B_CATEGORY
		                 , B_TITLE
		                 , B_READ_COUNT
		                 , B_RECOMMEND_COUNT
		                 , NICKNAME <!-- MEMBER 테이블과 조인 -->
		                 , TO_CHAR(B_REGIST_DATE, 'YY/MM/DD HH:MI:SS') B_REGIST_DATE
		                 , FILE_PATH || CHANGE_NAME TITLEIMG_URL <!-- ATTACHMENT 테이블과 조인  -->
		                 , (SELECT COUNT(*) FROM REPLY WHERE B_NO = BOARD_NO) REPLY_COUNT
		              FROM BOARD B
		              JOIN MEMBER M ON (B.MEM_NO = M.MEM_NO)
		              LEFT JOIN ATTACHMENT A ON (REF_TYPE = '3' and A.REF_NO = B.B_NO)
		             WHERE B_D_STATUS = 'N'
		               AND B_CATEGORY = '2'
		             ORDER
		                BY B_NO DESC
		            ) B
		    WHERE ROWNUM BETWEEN 1 AND 4
	</entry>
	
	<!-- 커뮤니티 메인페이지의 우측에 인기영화란의 영화제목을 담기위한 메소드 호출구문 추후 수정해야됨(찜하기 테이블과 조인해야됨) by호용-->
	<entry key="selectPublicMovieName">
	    SELECT B.*
	      FROM (
	            SELECT
				   MV_NO
				 , MV_NAME
	              FROM MOVIE
	            ) B
	    WHERE ROWNUM BETWEEN 1 AND 10
	</entry>
	
	<!-- 커뮤니티 영화이름 클릭시 영화 상세페이지 이동을 위한 영화번호를 담기위한 메소드 by호용-->
	<entry key="selectAllMovie">
	           SELECT
				   MV_NO
				 , MV_NAME
	              FROM MOVIE
	</entry>
	
	<!-- 총 게시글 갯수를 구하기 위한 sql문, 페이징바에 활용됨 BY 호용 -->
	<entry key="selectListCount">
		SELECT COUNT(*) COUNT
		  FROM BOARD
		 WHERE B_D_STATUS = 'N'
	</entry>
	
	<!-- 커뮤니티 영화카테고리 인기게시글 페이지에 띄울 값들을 출력 및 페이징바 적용을 위한 sql문 by호용 -->
	<entry key="selectPublicList">
	 SELECT *
	   FROM (
		    SELECT ROWNUM RNUM, A.*
			  FROM (
					SELECT
					       B_NO
					     , B_CATEGORY
					     , B_TITLE
					     , B_READ_COUNT
					     , B_RECOMMEND_COUNT
					     , NICKNAME <!-- MEMBER 테이블과 조인 -->
					     , TO_CHAR(B_REGIST_DATE, 'YY/MM/DD HH:MI:SS') B_REGIST_DATE
		                 , FILE_PATH || CHANGE_NAME TITLEIMG_URL <!-- ATTACHMENT 테이블과 조인  -->
					     , (SELECT COUNT(*) FROM REPLY WHERE B_NO = BOARD_NO) REPLY_COUNT
					  FROM BOARD B
					  JOIN MEMBER M ON (B.MEM_NO = M.MEM_NO)
					  LEFT JOIN ATTACHMENT A ON (REF_TYPE = '3' and A.REF_NO = B.B_NO)
					 WHERE B_D_STATUS = 'N'
					   AND B_CATEGORY = '1'
					   AND B_RECOMMEND_COUNT > 3
					 ORDER
					    BY B_NO DESC
					) A
			)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 커뮤니티 영화카테고리 전체게시글 페이지에 띄울 값들을 출력 및 페이징바 적용을 위한 sql문 by호용 -->
	<entry key="selectList">
	 SELECT *
	   FROM (
		    SELECT ROWNUM RNUM, A.*
			  FROM (
					SELECT
					       B_NO
					     , B_CATEGORY
					     , B_TITLE
					     , B_READ_COUNT
					     , B_RECOMMEND_COUNT
					     , NICKNAME <!-- MEMBER 테이블과 조인 -->
					     , TO_CHAR(B_REGIST_DATE, 'YY/MM/DD HH:MI:SS') B_REGIST_DATE
		                 , FILE_PATH || CHANGE_NAME TITLEIMG_URL <!-- ATTACHMENT 테이블과 조인  -->
					     , (SELECT COUNT(*) FROM REPLY WHERE B_NO = BOARD_NO) REPLY_COUNT
					  FROM BOARD B
					  JOIN MEMBER M ON (B.MEM_NO = M.MEM_NO)
					  LEFT JOIN ATTACHMENT A ON (REF_TYPE = '3' and A.REF_NO = B.B_NO)
					 WHERE B_D_STATUS = 'N'
					   AND B_CATEGORY = '1'
					 ORDER
					    BY B_NO DESC
					) A
			)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 커뮤니티 잡담카테고리 전체게시글 페이지에 띄울 값들을 출력 및 페이징바 적용을 위한 sql문 by호용 -->
	<entry key="selectChatList">
	 SELECT *
	   FROM (
		    SELECT ROWNUM RNUM, A.*
			  FROM (
					SELECT
					       B_NO
					     , B_CATEGORY
					     , B_TITLE
					     , B_READ_COUNT
					     , B_RECOMMEND_COUNT
					     , NICKNAME <!-- MEMBER 테이블과 조인 -->
					     , TO_CHAR(B_REGIST_DATE, 'YY/MM/DD HH:MI:SS') B_REGIST_DATE
		                 , FILE_PATH || CHANGE_NAME TITLEIMG_URL <!-- ATTACHMENT 테이블과 조인  -->
					     , (SELECT COUNT(*) FROM REPLY WHERE B_NO = BOARD_NO) REPLY_COUNT
					  FROM BOARD B
					  JOIN MEMBER M ON (B.MEM_NO = M.MEM_NO)
					  LEFT JOIN ATTACHMENT A ON (REF_TYPE = '3' and A.REF_NO = B.B_NO)
					 WHERE B_D_STATUS = 'N'
					   AND B_CATEGORY = '2'
					   <!-- AND REF_TYPE = '3' -->
					 ORDER
					    BY B_NO DESC
					) A
			)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 커뮤니티의 게시글 등록을 위한 insert sql문 by호용 -->
	<entry key="insertBoard">
   		INSERT
   		  INTO BOARD
   		  (
   		 	B_NO
		  ,	B_CATEGORY
		  ,	B_TITLE
		  ,	B_CONTENT
		  ,	MEM_NO
   		  )
   		  VALUES
   		  (
   		  	SEQ_BOARD_NO.NEXTVAL
   		  , ? <!-- (사용자가 선택한 카테고리) -->
   		  , ? <!-- (사용자가 입력한 제목) -->
   		  , ? <!-- (사용자가 입력한 내용) -->
   		  , ? <!-- ( 작성자 회원번호 (로그인한 회원번호) ) -->
   		  )
   </entry>
   
   <!-- 커뮤니티의 게시글 등록을 위한 insert sql문(첨부파일이 있을경우) by호용 -->
   <entry key="insertAttachment">
   		INSERT
   		  INTO ATTACHMENT
   		  (
   		  	FILE_NO
		  ,	REF_NO
		  , REF_TYPE
		  , FILE_TYPE
		  ,	ORIGIN_NAME
		  ,	CHANGE_NAME
		  ,	FILE_PATH
   		  )
   		  VALUES
   		  (
   		  	SEQ_ATTACHMENT_NO.NEXTVAL
   		  , SEQ_BOARD_NO.CURRVAL<!--바로 이전의 NEXTVAL로 발생된 번호(하나의 트랜잭션으로 관리해야됨)-->
   		  , '3'
   		  , '1'
   		  , ? <!-- (전달된 첨부파일의 원본명) -->
   		  , ? <!-- (해당 첨부파일의 수정명 == 실제 업로드된 파일명) -->
   		  , ? <!-- (저장경로) -->
   		  )
   </entry>
   
   <!-- 조회수 증가를 위한 sql문 by호용 -->
   <entry key="increaseCount">
   		UPDATE
   			   BOARD
   		   SET B_READ_COUNT = B_READ_COUNT + 1
   		 WHERE B_NO = ? <!-- 현재 넘겨받은 글번화 일치하는 -->
   		   AND B_D_STATUS = 'N'
   		   AND B_B_STATUS = 'N' <!-- 유요한 글번호(삭제되지않은) -->
   </entry>
   
   <!-- 게시글 상세페이지를 띄우기위한 sql문 by호용 -->
   <entry key="selectBoard">
   		SELECT
   			   B_NO
   			 , B_CATEGORY
   			 , B_TITLE
   			 , B_CONTENT
   			 , MEM_ID <!-- 멤버테이블과 조인 -->
   			 , TO_CHAR(B_REGIST_DATE, 'YY/MM/DD HH:MI:SS') B_REGIST_DATE
   	      FROM BOARD B
   	      JOIN MEMBER M ON (B.MEM_NO = M.MEM_NO)
   	     WHERE B_NO = ? <!-- 현재 넘겨받은 글번호와 일치하는 -->
   	       AND B_B_STATUS = 'N'
   	       AND B_D_STATUS = 'N'
   </entry>
   
   <!-- 게시글 상세페이지를 띄우기위한 sql문(첨부파일) by호용 -->
   <entry key="selectAttachment">
   		SELECT 
   			   FILE_NO
   			 , ORIGIN_NAME
   			 , CHANGE_NAME
   			 , FILE_PATH
   	  	  FROM ATTACHMENT
   	  	 WHERE REF_NO = ? <!-- 참조하는게시글번호가 현재 넘겨받은 글번호와 일치하는지? -->
   	  	 ORDER
		    BY FILE_LEVEL ASC
   </entry>
   
   <!-- 게시글 수정을 위한 sql문 by호용 -->
   <entry key="updateBoard">
   		UPDATE
   			   BOARD
   		   SET B_CATEGORY = ?
   		     , B_TITLE = ?
   		     , B_CONTENT = ?
   		 WHERE B_NO = ? 
   </entry>

   <!-- 게시글 수정시 첨부파일 수정을 위한 sql문 by호용 -->
   <entry key="updateAttachment">
   		UPDATE
   			   ATTACHMENT
   		   SET ORIGIN_NAME = ? <!-- 새로 넘어온 첨부파일의 원본명 -->
   		     , CHANGE_NAME = ? <!-- 새로 넘어온 첨부파일의 수정명 -->
   		     , FILE_PATH = ? <!-- 새로 넘어온 첨부파일의 저장경로 -->
   		 WHERE FILE_NO = ? <!-- 기존 첨부파일의 고유번호 -->
   </entry>
 
   <!-- 게시글 수정시 첨부파일 업로드를 위한 sql문 by호용 -->
   <entry key="insertNewAttachment">
   		INSERT
   		  INTO ATTACHMENT
   		  (
   		  	FILE_NO
   		  , REF_TYPE
   		  , FILE_TYPE
   		  , REF_NO
   		  , ORIGIN_NAME
   		  , CHANGE_NAME
   		  , FILE_PATH
   		  )
   		  VALUES
   		  (
   		  	SEQ_ATTACHMENT_NO.NEXTVAL
   		  , '3'
   		  , '1'
   		  , ? <!-- 기존의 게시글 번호 -->
   		  , ? <!-- 새로 넘어온 첨부파일의 원본명 -->
   		  , ? <!-- 새로 넘어온 첨부파일의 수정명 -->
   		  , ? <!-- 새로 넘어온 첨부파일의 저장경로 -->
   		  )
   </entry>
   
   <!-- 게시글 삭제을 위한 sql문 by호용 -->
   <entry key="deleteBoard">
   		UPDATE
   			   BOARD
   		   SET B_D_STATUS = 'Y'
   		 WHERE B_NO = ? 
   </entry>
   
   <!-- 화면에 댓글을 띄우기위한 sql문 by호용 -->
   <entry key="selectReplyList">
		SELECT
			   REPLY_NO
			 , MEM_ID <!-- 멤버테이블과 조인 -->
			 , REPLY_CONTENT
			 , TO_CHAR(ENROLL_DATE, 'YYYY/MM/DD HH:MI') ENROLL_DATE
		  FROM REPLY R
		  JOIN MEMBER M ON (R.MEM_NO = M.MEM_NO)
		 WHERE BOARD_NO = ?
		   AND REPLY_D_STATUS = 'N'
		 ORDER
		    BY REPLY_NO DESC
   </entry>
   
    <!-- 댓글등록을 위한 sql문 by호용 -->
	<entry key="insertReply">
		INSERT
		  INTO REPLY
		  (
		  	REPLY_NO
		  , MEM_NO
		  , BOARD_NO
		  , REPLY_CONTENT
		  )
		  VALUES
		  (
		  	SEQ_REPLY_NO.NEXTVAL
		  , ? <!-- 댓글등록요청 보낸 회원번호(로그이인한 회원번호) -->
		  , ? <!-- 참조하는 게시글 번호(현재보고있는 게시글번호) -->
		  , ? <!-- 사용자가 입력한 댓글내용 -->
		  )
	</entry>   
   
</properties>