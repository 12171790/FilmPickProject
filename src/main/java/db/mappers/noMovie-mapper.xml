<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<!--===================================================== 김지우 : 절취선 시작 ===================================================================================================== -->
	<!-- 없는영화 신청 확인 목록 조회, 페이징 용도 -->
	<entry key="selectnoMovieRequestListCount">
		SELECT COUNT(*) COUNT
		FROM NO_MOVIE_ENROLL
	</entry>
	
	<!-- 없는영화 신청 확인 목록 조회, 페이징 용도 -->
	<entry key="selectnoMovieRequestList">
		SELECT *
			FROM(
			    SELECT ROWNUM RNUM, A.*
			    FROM (
			            SELECT NM_TITLE
                             , NM_POSTER
                             , NM_ENROLL_DATE
                             , NM_APPROVAL
                             , NM_STORY
                             , NM.MEM_NO AS MEM_NO
                             , M.NICKNAME AS NICKNAME
                        FROM NO_MOVIE_ENROLL NM
                        JOIN MEMBER M ON (NM.MEM_NO = M.MEM_NO)
                        ORDER BY DECODE(NM.NM_APPROVAL, 'D', 1) DESC, NM.NM_ENROLL_NO DESC
			    ) A
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 없는영화 신청 목록 승인여부 필터 -->
	<entry key="selectApprovalFilter">
		SELECT NM_TITLE
             , NM_POSTER
             , NM_ENROLL_DATE
             , NM_APPROVAL
             , NM_STORY
             , NM.MEM_NO AS MEM_NO
             , M.NICKNAME AS NICKNAME
        FROM NO_MOVIE_ENROLL NM
        JOIN MEMBER M ON (NM.MEM_NO = M.MEM_NO)
        WHERE NM_APPROVAL = ?
        ORDER BY NM.NM_ENROLL_NO DESC
	</entry>
	
	<entry key="approvalNoMovieRequest">
		INSERT INTO MOVIE VALUES( 
				    SEQ_MOVIE_NO.NEXTVAL
				    , ?
				    , ?
				    , ?
				    , ?
				    , ?
				    , DEFAULT
				    , ?
				    , DEFAULT
				    , DEFAULT
				    , ?
				    , ?
				    , DEFAULT
				    , SYSDATE
				)
	</entry>
	
<!--===================================================== 김지우 : 절취선 끝 ===================================================================================================== -->

	<!-- 없는영화 신청을 위한 sql문 [호용]-->
	<entry key="insertNoMovie">
		INSERT
		  INTO NO_MOVIE_ENROLL
		  (
		  	NM_ENROLL_NO <!-- 없는영화번호 -->
		  , NM_TITLE <!-- 제목 -->
		  , NM_STORY <!-- 줄거리 -->
		  , NM_RELEASE_DATE <!-- 개봉일 -->
		  , NM_RUN_TIME <!-- 러닝타임 -->
		  , NM_USER_REQUEST <!-- 사용자요청사항 -->
		  , NM_NICKNAME_STATUS <!-- 닉네임제공여부 -->
		  , NM_NATION <!-- 국내 | 해외 -->
		  , NM_VIEW_GRADE <!-- 관람등급 -->
		  , MEM_NO <!-- 작성한회원번호 -->
		  , NM_POSTER <!-- 메인포스터 -->
		  , NM_PREVIEW <!-- 메인예고편 -->
		  )
		  VALUES
		  (
		  	SEQ_NO_MOVIE_ENROLL_NO.NEXTVAL
		  , ? <!-- 제목 -->
		  , ? <!-- 줄거리 -->
		  , ? <!-- 개봉일 -->
		  , ? <!-- 러닝타임 -->
		  , ? <!-- 사용자요청사항 -->
		  , ? <!-- 닉네임제공여부 -->
		  , ? <!-- 국내 | 해외 -->
		  , ? <!-- 관람등급 -->
		  , ? <!-- 작성한회원번호 -->
		  , ? <!-- 메인포스터 -->
		  , ? <!-- 메인예고편 -->
		  )
	</entry>
	
	<!-- 신청한 없는영화 수정을 위한 NO_MOVIE_ENROLL 업데이트 sql문 [호용]  -->
	<entry key="updateNoMovie">
		UPDATE
			   NO_MOVIE_ENROLL
		   SET NM_TITLE = ? <!-- 제목 -->
			 , NM_STORY = ? <!-- 줄거리 -->
			 , NM_RELEASE_DATE = ? <!-- 개봉일 -->
			 , NM_RUN_TIME = ? <!-- 러닝타임 -->
			 , NM_USER_REQUEST = ? <!-- 사용자 요청사항 -->
			 , NM_NICKNAME_STATUS = ? <!-- 닉네임 제공여부 -->
			 , NM_NATION = ? <!-- 국내 | 해외 -->
			 , NM_VIEW_GRADE = ? <!-- 관람등급 -->
			 , NM_POSTER = ? <!-- 메인포스터 -->
			 , NM_PREVIEW = ? <!-- 메인예고편 -->
		 WHERE NM_ENROLL_NO = ? <!-- 매칭되는 없는영화 번호 -->
	</entry>
	
	<!-- 없는영화신청시 출연인물들의 insert를 위한 sql문 [호용]-->
	<entry key="insertNoMoviePerson">
		INSERT
		  INTO NO_MOVIE_CAST
		  (
		  	NM_CAST_NO <!-- 없는 영화 인물 번호 -->
		  , PERSON_NO <!-- 인물번호 -->
		  , NM_ENROLL_NO <!-- 없는 영화 신청 번호 -->
		  , NM_CASTING <!-- 배역 -->
		  )
		  VALUES
		  (
		  	SEQ_NO_MOVIE_CAST_NO.NEXTVAL <!-- 없는 영화 인물 번호 -->
		  , ? <!-- 인물번호 -->
		  , SEQ_NO_MOVIE_ENROLL_NO.CURRVAL <!-- 없는 영화 신청 번호 -->
		  , ? <!-- 배역 -->
		  )
	</entry>
	
	<!-- 신청한 없는영화 수정을 위한 NO_MOVIE_CAST DELETE sql문 1번과정 [호용] -->
	<entry key="updateNoMoviePersonDelete">
		DELETE
		  FROM NO_MOVIE_CAST
		 WHERE NM_ENROLL_NO = ?
	</entry>
	
	<!-- 신청한 없는영화 수정을 위한 NO_MOVIE_CAST INSERT sql문 2번과정 [호용] -->
	<entry key="updateNoMoviePersonInsert">
		INSERT
		  INTO NO_MOVIE_CAST
		  (
		  	NM_CAST_NO <!-- 없는영화인물번호 -->
		  , PERSON_NO <!-- 인물번호 -->
		  , NM_ENROLL_NO <!-- 없는영화신청번호 -->
		  , NM_CASTING <!-- 배역 -->
		  )
		  VALUES
		  (
		  	SEQ_NO_MOVIE_CAST_NO.NEXTVAL <!-- 없는 영화 인물 번호 -->
		  , ? <!-- 인물번호 -->
		  , ? <!-- 없는 영화 신청 번호 -->
		  , ? <!-- 배역 -->
		  )
	</entry>
	
	<!-- 없는영화신청시 영화의 장르를 insert하는 sql문[호용] -->
	<entry key="insertNoMovieCategory">
		INSERT
		  INTO NO_MOVIE_GENRE
		  (
		  	NM_GENRE_NO <!-- 없는영화 장르번호 -->
		  , CATEGORY_NO <!-- 장르번호 -->
		  , NM_ENROLL_NO <!-- 없는영화 신청번호 -->
		  )
		  VALUES
		  (
		  	SEQ_NO_MOVIE_GENRE_NO.NEXTVAL <!-- 없는영화 장르번호 -->
		  , ? <!-- 장르번호 -->
		  , SEQ_NO_MOVIE_ENROLL_NO.CURRVAL <!-- 없는영화 신청번호 -->
		  )
	</entry>
	
	<!-- 신청한 없는영화 수정을 위한 NO_MOVIE_GENRE DELETE sql문 1번과정 [호용] -->
	<entry key="updateNoMovieCategoryDelete">
		DELETE
		  FROM NO_MOVIE_GENRE
		 WHERE NM_ENROLL_NO = ?
	</entry>
	
	<!-- 신청한 없는영화 수정을 위한 NO_MOVIE_GENRE INSERT sql문 1번과정 [호용] -->
	<entry key="updateNoMovieCategoryInsert">
		INSERT
		  INTO NO_MOVIE_GENRE
		  (
		  	NM_GENRE_NO <!-- 없는영화 장르번호 -->
		  , CATEGORY_NO <!-- 장르번호 -->
		  , NM_ENROLL_NO <!-- 없는영화 신청번호 -->
		  )
		  VALUES
		  (
		  	SEQ_NO_MOVIE_GENRE_NO.NEXTVAL <!-- 없는영화 장르번호 -->
		  , ? <!-- 장르번호 -->
		  , ? <!-- 없는영화 신청번호 -->
		  )
	</entry>
	
	<!-- 없는영화 신청을 위한 sql문 ATTACHMENT 인설트(추가적인 파일이 있을 경우) [호용] -->
	<entry key="insertNoMovieAttachment">
		INSERT
		  INTO ATTACHMENT
		  (
		  	FILE_NO <!-- 첨부파일 번호 -->
		  , REF_NO <!-- 영화번호(없는영화 번호)  -->
		  , REF_TYPE <!-- 첨부파일 타입(없는영화 4번임) -->
		  , FILE_TYPE <!-- 사진1 | 영상2 -->
		  , ORIGIN_NAME <!-- 원본명 -->
		  , CHANGE_NAME <!-- 수정명 -->
		  , FILE_PATH <!-- 저장경로 -->
		  , FILE_LEVEL <!-- 파일레벨 1메인 | 2추가 -->
		  )
		  VALUES
		  (
		  	SEQ_ATTACHMENT_NO.NEXTVAL <!-- 첨부파일 번호 -->
		  , SEQ_NO_MOVIE_ENROLL_NO.CURRVAL <!-- 영화번호(없는영화 번호)  -->
		  , '4'
		  , ? <!-- 사진1 | 영상2 -->
		  , ? <!-- 원본명 -->
		  , ? <!-- 수정명 -->
		  , ? <!-- 저장경로 -->
		  , 2 <!-- 파일레벨 1메인 | 2추가 -->
		  )
	</entry>
	
	<!-- 없는영화 신청을 위한 sql문 ATTACHMENT 인설트(메인포스터) [호용] -->
	<entry key="insertAttachment1">
		INSERT
		  INTO ATTACHMENT
		  (
		  	FILE_NO <!-- 첨부파일 번호 -->
		  , REF_NO <!-- 영화번호(없는영화 번호)  -->
		  , REF_TYPE <!-- 첨부파일 타입(없는영화 4번임) -->
		  , FILE_TYPE <!-- 사진1 | 영상2 -->
		  , ORIGIN_NAME <!-- 원본명 -->
		  , CHANGE_NAME <!-- 수정명 -->
		  , FILE_PATH <!-- 저장경로 -->
		  , FILE_LEVEL <!-- 파일레벨 1메인 | 2추가 -->
		  )
		  VALUES
		  (
		  	SEQ_ATTACHMENT_NO.NEXTVAL <!-- 첨부파일 번호 -->
		  , SEQ_NO_MOVIE_ENROLL_NO.CURRVAL <!-- 영화번호(없는영화 번호)  -->
		  , '4'
		  , 1
		  , ? <!-- 원본명 -->
		  , ? <!-- 수정명 -->
		  , ? <!-- 저장경로 -->
		  , 1
		  )
	</entry>
	
		<!-- 없는영화 신청을 위한 sql문 ATTACHMENT 인설트(메인예고편) [호용] -->
	<entry key="insertAttachment2">
		INSERT
		  INTO ATTACHMENT
		  (
		  	FILE_NO <!-- 첨부파일 번호 -->
		  , REF_NO <!-- 영화번호(없는영화 번호)  -->
		  , REF_TYPE <!-- 첨부파일 타입(없는영화 4번임) -->
		  , FILE_TYPE <!-- 사진1 | 영상2 -->
		  , ORIGIN_NAME <!-- 원본명 -->
		  , CHANGE_NAME <!-- 수정명 -->
		  , FILE_PATH <!-- 저장경로 -->
		  , FILE_LEVEL <!-- 파일레벨 1메인 | 2추가 -->
		  )
		  VALUES
		  (
		  	SEQ_ATTACHMENT_NO.NEXTVAL <!-- 첨부파일 번호 -->
		  , SEQ_NO_MOVIE_ENROLL_NO.CURRVAL <!-- 영화번호(없는영화 번호)  -->
		  , '4'
		  , 2
		  , ? <!-- 원본명 -->
		  , ? <!-- 수정명 -->
		  , ? <!-- 저장경로 -->
		  , 1
		  )
	</entry>
	
	<!-- 신청한 없는영화 수정을 위한 ATTACHMENT 업데이트 sql문 [호용] -->
	<entry key="updateNoMovieAttachment">
		UPDATE
			   ATTACHMENT
		   SET FILE_TYPE = ? <!-- 사진1 | 영상2 -->
		     , ORIGIN_NAME = ? <!-- 원본명 -->
		     , CHANGE_NAME = ? <!-- 수정명 -->
		 	 , FILE_PATH = ? <!-- 저장경로 -->
		 WHERE REF_NO = ? <!-- 없는영화번호 -->
	</entry>
	
	<!-- 없는영화신청 메인페이지에 보여져야될 값을 담은 sql문 [호용] -->
	<entry key="selectNoMovie">
		SELECT
			   NM_ENROLL_NO
			 , NM_TITLE
			 , TO_CHAR(NM_ENROLL_DATE, 'YY-MM-DD') NM_ENROLL_DATE
			 , NM_APPROVAL
			 , NM_REFUSE_REASON
			 , MEM_NO
		  FROM NO_MOVIE_ENROLL
		 WHERE MEM_NO = ? <!-- 넘겨받은 회원번호 -->
	</entry>
	
	<!-- 없는영화 수정페이지에 띄울 값들을 조회하는 sql문 [호용] -->
	<entry key="selectNoMovieAll">
		SELECT
			   NM.NM_TITLE 
			 , NM.NM_VIEW_GRADE
			 , NM.NM_STORY
			 , NM.NM_RELEASE_DATE
			 , NM.NM_RUN_TIME
			 , NM.NM_NATION
			 , NM.NM_POSTER
			 , NM.NM_PREVIEW
			 , NM.NM_USER_REQUEST
			 , NM.NM_NICKNAME_STATUS
			 , NM.MEM_NO
		  FROM NO_MOVIE_ENROLL NM
		 WHERE NM_ENROLL_NO = ?
	</entry>
	
	<!-- 없는영화 수정페이지에 띄울 인물 값들을 조회하는 sql문 [호용] -->
	<entry key="selectNoMoviePerson">	
		SELECT
			   NM_CAST_NO <!-- 없는영화 인물번호 -->
			 , PERSON_NO <!-- 인물번호 -->
			 , NM_ENROLL_NO <!-- 없는영화 신청번호 -->
			 , NM_CASTING <!-- 배역(없는영화) -->
			 , P_NAME <!-- 이름 -->
			 , P_FILE <!-- 첨부파일경로(펄슨테이블) -->
		  FROM NO_MOVIE_CAST NP
		  JOIN PERSON P ON (P_NO = PERSON_NO)
		 WHERE NM_ENROLL_NO = ?
	</entry>
	
	<!-- 없는영화 수정페이지에 띄울 인물 값들을 조회하는 sql문 기존꺼임 [호용]
	<entry key="selectNoMoviePerson">	
		SELECT
			   NM_CAST_NO 없는영화 인물번호
			 , PERSON_NO 인물번호
			 , NM_ENROLL_NO 없는영화 신청번
			 , NM_CASTING
		  FROM NO_MOVIE_CAST
		 WHERE NM_ENROLL_NO = ?
	</entry>
	 -->
	 
	<!-- 없는영화 수정페이지에 띄울 카테고리 값들을 조회하는 sql문 [호용] -->
	<entry key="selectNoMovieCategory">
		SELECT
			   NM.NM_GENRE_NO
			 , NM.CATEGORY_NO
		  FROM NO_MOVIE_GENRE NM
		 WHERE NM_ENROLL_NO = ?
	</entry>
	
	<!-- 없는영화 수정페이지에 띄울 추가 첨부파일 값들을 조회하는 sql문 [호용] -->
	<entry key="selectAttachment">
		SELECT 
   			   FILE_NO
   			 , ORIGIN_NAME
   			 , CHANGE_NAME
   			 , FILE_PATH
   	  	  FROM ATTACHMENT
   	  	 WHERE REF_NO = ?
   	  	   AND REF_TYPE = 4
   	  	   AND FILE_LEVEL = 2
	</entry>
	
	<!-- 없는영화신청페이지에 들어갈 때 카테고리에 띄울 카테고리명들을 담기위한 메소드 [호용] -->
	<entry key="selectCategory">
		SELECT 
			   C.CATEGORY_NO
			 , C.CATEGORY_NAME
			 , NM.NM_GENRE_NO NM_GENRE_NO
	      FROM CATEGORY C 
         LEFT JOIN NO_MOVIE_GENRE NM ON (NM.NM_GENRE_NO = C.CATEGORY_NO)
	     WHERE CATEGORY_STATUS = 'Y'
	</entry>
	
	<!-- 사용자가 신청한 없는영화 갯수를 구하기 위한 sql문, 페이징바에 활용됨 BY 호용 -->
	<entry key="selectListCount">
		SELECT COUNT(*) COUNT
		  FROM NO_MOVIE_ENROLL
		 WHERE MEM_NO = ?
	</entry>
	
	<!-- 키워드에 맞는 신청한 없는영화 신청글 갯수를 구하기 위한 sql문, 페이징바에 활용됨[호용] -->
	<entry key="keywordSelectListCount">
		SELECT COUNT(*) COUNT
		  FROM NO_MOVIE_ENROLL
		 WHERE MEM_NO = ?
		   AND NM_TITLE LIKE ?
	</entry>
	
	<!-- 키워드에 맞는 없는영화신청 현황 페이지에 띄울 값들을 출력 및 페이징바 적용을 위한 sql문 by호용 -->
	<entry key="selectKeywordList">
	 SELECT *
	   FROM (
		    SELECT ROWNUM RNUM, A.*
			  FROM (
					SELECT
					       NM_ENROLL_NO <!-- 없는영화 번호 -->
					     , NM_TITLE <!-- 없는영화 제목 -->
					     , TO_CHAR(NM_ENROLL_DATE, 'YY-MM-DD') NM_ENROLL_DATE <!-- 작성일 -->
					     , NM_APPROVAL
					     , NM_REFUSE_REASON
					     , MEM_NO
					  FROM NO_MOVIE_ENROLL
					 WHERE MEM_NO = ?
					   AND NM_TITLE LIKE ?
					 ORDER
					    BY NM_ENROLL_NO DESC
					) A
			)
		WHERE RNUM BETWEEN ? AND ?
	</entry>	
	
	
</properties>







